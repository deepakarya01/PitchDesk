// prisma/schema.prisma

generator client {
   provider = "prisma-client-js"
}

datasource db {
   provider = "postgresql"
   url      = env("DATABASE_URL")
}

model User {
   id            String    @id @default(uuid())
   name          String
   email         String    @unique
   emailVerified DateTime? // Required by Auth.js
   image         String?
   createdAt     DateTime  @default(now())
   updatedAt     DateTime  @updatedAt
   startups      Startup[]
   accounts      Account[] // Required by Auth.js
   sessions      Session[] // Required by Auth.js
}

model Account {
   id                String  @id @default(cuid())
   userId            String
   type              String
   provider          String
   providerAccountId String  @unique
   refresh_token     String? @db.Text
   access_token      String? @db.Text
   expires_at        Int?
   token_type        String?
   scope             String?
   id_token          String? @db.Text
   session_state     String?
   user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

   @@unique([provider, providerAccountId])
}

model Session {
   id           String   @id @default(cuid())
   sessionToken String   @unique
   userId       String
   expires      DateTime
   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Startup {
   id          String   @id @default(uuid())
   title       String
   description String
   category    String
   image       String?
   views       Int
   pitch       String
   createdAt   DateTime @default(now())
   updatedAt   DateTime @updatedAt
   authorId    String
   author      User     @relation(fields: [authorId], references: [id])
}
